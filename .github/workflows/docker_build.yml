name: build docker image

on:
  workflow_call:
    outputs:
      tag:
        value: ${{ jobs.build.outputs.tag }}
    inputs:
      username:
        required: true
        type: string
      REGISTRY:
        required: true
        type: string
    secrets:
      token:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tags: ${{ steps.docker_metadata.outputs.tags }}

    steps:
      - id: toLower
        name: toLower
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}

      - name: checkout
        uses: actions/checkout@v3

      - name: docker - login
        id: docker_login
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.REGISTRY }}
          username: ${{ inputs.username }}
          password: ${{ secrets.token }}

      - name: docker - extract metadata
        id: docker_metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.REGISTRY }}/${{ steps.toLower.outputs.lowercase }}
          flavor: |
            latest=false
            
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and cache
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: docker - login
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.REGISTRY }}
          username: ${{ inputs.username }}
          password: ${{ secrets.token }}

      - name: docker - composer run check
        shell: bash
        run: |
          docker run --rm ${{ needs.build.outputs.tags }} npm run lint -- --max-warnings=5
