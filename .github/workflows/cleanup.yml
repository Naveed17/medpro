name: cleanup

on:
  pull_request:
    branches:
      - 'develop'
    types:
      - closed
      - locked

jobs:
  envmap:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.pull_request.labels.*.name, 'cleanup') }}
    # Map a step output to a job output
    outputs:
      enable_cd: ${{ steps.export.outputs.enable_cd }}
      environments: ${{ steps.export.outputs.environments }}
    steps:
      - name: github-slug-action
        uses: rlespinasse/github-slug-action@v4.4.1
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1
      - uses: kanga333/variable-mapper@master
        id: export
        with:
          mode: first_match
          export_to: output
          key: "${{ github.ref }}"
          map: |
            {
                "refs/pull/.*": {
                "enable_cd": "${{ contains(github.event.pull_request.labels.*.name, 'preview') }}",
                "environments": "{\"envs\":[{\"name\": \"preview\",\"ws\": \"pr-${{ github.event.number }}\" , \"host\": \"med-pro-pr-${{ github.event.number }}.med.ovh\"}]}"
              },
              ".*": {
                "enable_cd": "false"
              }
            }

  Cleanup:
    needs: [envmap]
    uses: SmartMedSA/github-workflows/.github/workflows/skaffold.yml@v1.1.0
    if: ${{ needs.envmap.outputs.enable_cd == 'true' }}
    strategy:
      matrix: ${{ fromJSON(needs.envmap.outputs.environments) }}
    with:
      cmd:  skaffold delete
      environment: ${{ matrix.envs.name }}
      version: "2.0.4"
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
      KUBECONFIG: ${{ secrets.KUBECONFIG }}
      ENV_VARS: |
        ${{ secrets.ENV_VARS }}
        INGRESS_TARGET=${{ secrets.INGRESS_TARGET }}
        INGRESS_HOST=${{ (secrets.INGRESS_HOST) || (matrix.envs.host) }}
        NEXTAUTH_URL=https://${{ (secrets.INGRESS_HOST) || (matrix.envs.host) }}
        SKAFFOLD_KUBE_CONTEXT=${{ secrets.SKAFFOLD_KUBE_CONTEXT }}
        SKAFFOLD_NAMESPACE=${{ secrets.SKAFFOLD_NAMESPACE }}
        SKAFFOLD_CACHE_ARTIFACTS=false
        WORKSPACE=${{ matrix.envs.name }}

